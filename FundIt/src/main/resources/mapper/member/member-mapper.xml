<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">

	<resultMap type="member" id="memberMap">
		<result column="email" property="email"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="newsyn" property="newsyn"/>
		<result column="adminyn" property="adminyn"/>
		<result column="enrolldate" property="enrollDate"/>
		<result column="naveryn" property="naveryn"/>
		<result column="deleteyn" property="deleteyn"/>
	</resultMap>
	
	<select id="selectMemberCnt" resultType="_int">
	select count(*) from member where email = #{email}
	</select>
	
	<update id="updateMemberPwd">
	update member set password = #{password} where email = #{email}
	</update>
	
 	<select id="selectMember" resultMap="memberMap">
		select * from member where email=#{email}
	</select>
	
	<update id="updateMember">
	update member set newsyn= #{newsyn} where email=#{email}
	</update>
	
	<update id="updateProfile">
	update profile set profileimage=#{profileImage}, profileintroduce=#{profileIntroduce}, localcode=#{localCode},phone=#{phone} where email=#{email}
	</update>
	
	<insert id="insertMember">
	insert into member values(#{email},#{password},#{name},default,default,default,default,default)
	</insert>
	
	
	<select id="checkEmailDuplicate" resultType="_int">
	select count(*) from member where email = #{email}
	</select>
	
	<select id="selectMemberByEmail" resultMap="memberMap">
	select * from member where email = #{email}
	</select>
		
    <resultMap type="profile" id="profileMap">
      <result column="email" property="email"/>
      <result column="profileimage" property="profileImage"/>
      <result column="profileintroduce" property="profileIntroduce"/>
      <result column="localcode" property="localCode"/>
      <result column="localname" property="localName"/>
      <result column="phone" property="phone"/>
   </resultMap>
   
   <select id="selectProfile" resultMap="profileMap">
   select * from profile where email = #{email}
   </select>
   
   <select id="selectNaverByEmail" resultMap="memberMap">
   select * from member where email = #{email}
   </select>
      
   <insert id="insertNaver">
   insert into member values('${naverEmail}',null,'${naverName}',default,default,default,'Y',default)
   </insert>
	
	<select id="selectProfileImg" resultType = "String">
	select profileimage from profile where email = #{email}
	</select>
	
	<select id="selectSupportList" resultMap = "supportMap">
	
	select a.supportno,a.projectno,a.payyn, (a.minmoney+a.addmoney) as mysupportmoney,
		(select trunc(deadlinedate - sysdate) from project_funding g where a.projectno = g.projectno ) as "deadlinedate",
		(select  nvl(supportgoal,'0') from project_funding d where a.PROJECTNO = d.projectno) as "supportgoal",
		(select projectimage from project_outline h where a.projectno = h.projectno) as "projectimage",
		(select projecttitle from project_outline e where a.projectno = e.projectno ) as "projecttitle",
		(select email from project_outline f where a.projectno = f.projectno) as "projectwriter",
		(select supportpercent from project_summary i where a.projectno = i.projectno) as "supportpercent",
 		nvl(b.ITEMNAME,'선물없음.')
		from support a 
		join delivery b on a.supportno = b.supportno
		where 1=1 
		and a.email = #{email}
		and (select projectconfirmyn from project_outline n where a.projectno = n.projectno ) = 'Y'
	<if test = "searchType != null and searchType != ''" >
		<if test ="searchType eq 'selectAll'">
		 and (a.payyn is null or a.payyn = 'Y' or a.payyn = 'N')
		<!--  and (
		 	 (select trunc(deadlinedate - sysdate) from project_funding k where a.projectno = k.projectno ) <![CDATA[>=]]> 0
		 	 or
		 	 (select trunc(deadlinedate - sysdate) from project_funding k where a.projectno = k.projectno ) <![CDATA[<]]> 0
		 	 ) -->
		</if>
		<if test ="searchType eq 'searchOnGoing'">
		 and a.payyn is null 
<!-- 		 and (select trunc(deadlinedate - sysdate) from project_funding k where a.projectno = k.projectno ) <![CDATA[>=]]> 0
 -->		</if>
		<if test ="searchType eq 'searchCancle'">
		 and a.payyn = 'N' 
		 <!-- and (
		 	 (select trunc(deadlinedate - sysdate) from project_funding k where a.projectno = k.projectno ) <![CDATA[>=]]> 0
		 	 or
		 	 (select trunc(deadlinedate - sysdate) from project_funding k where a.projectno = k.projectno ) <![CDATA[<]]> 0
		 	 ) -->
		</if>
		<if test ="searchType eq 'searchComplated'">
		 and (a.payyn = 'Y')
<!-- 		 and (select trunc(deadlinedate - sysdate) from project_funding k where a.projectno = k.projectno ) <![CDATA[<]]> 0
 -->	</if>
	
		<if test="searchKeyword != null and searchKeyword != ''">
		 and (a.payyn = 'Y') and
		 	(
		 	  ((select email from project_outline l where a.projectno = l.projectno) like '%'||#{searchKeyword}||'%') 
		 	  or 
		 	  ( a.itemname like '%'||#{searchKeyword}||'%')
		 	  or
		 	  ( (select projecttitle from project_outline m where a.projectno = m.projectno ) like '%'||#{searchKeyword}||'%')
		    ) 
		</if>
	</if>
	order by "deadlinedate" desc
	</select>
	
	<resultMap type="support" id="supportMap">
      <result column="projectno" property="projectNo"/>
      <result column="supportno" property="supportNo"/>
      <result column="payyn" property="payYn"/>
      <result column="mysupportmoney" property="mySupportMoney"/>
      <result column="supportgoal" property="supportGoal"/>
      <result column="deadlinedate" property="deadlineDate"/>
      <result column="projectwriter" property="projectWriter"/>
      <result column="projecttitle" property="projectTitle"/>
      <result column="deadlinddate" property="deadlindDate"/>
      <result column="projectimage" property="projectImage"/>
      <result column="supportpercent" property="supportPercent"/>
      <result column="itemname" property="itemName"/>
   </resultMap>
	
	
</mapper>
