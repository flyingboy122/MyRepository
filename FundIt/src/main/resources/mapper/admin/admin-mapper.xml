<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
	
	<select id="indexProject" resultType="list_project_view">
	<![CDATA[
		select  o.projectno, o.projecttitle, o.projectimage,
		        (select name from member m where o.email = m.email) name,
		        trunc(f.deadlinedate - sysdate)+1 deadlineday,
		        sp.supportmoney, sp.supportpercent
		    from project_outline o 
		        join project_funding f on o.projectno = f.projectno 
		        join project_story s on o.projectno = s.projectno
		        join project_account a on o.projectno = a.projectno
		        join project_summary sp on o.projectno = sp.projectno
		    where o.projectconfirmyn='Y' and o.projectdeadlineyn='N'
		    order by o.projectdate desc
	 ]]>
	</select>
	
	<update id="updateIndex">
		update project_outline set projectindexyn='N' where projectindexyn='Y'
	</update>
	
	<update id="updateAdminIndexYN">
		update project_outline set projectindexyn='Y' where projectno in
		<foreach collection="array" item="no" index="index" open="(" separator="," close=")" >
		 #{no} 
		</foreach>
	</update>
	
	<select id="projectConfirmList" resultType="list_project_view">
	<![CDATA[
		select p.projectno, p.projectimage, p.projecttitle, 
	        (select name from member m where p.email = m.email) name,
	        (select trunc(deadlinedate - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday
		from (select * from project_outline where projectconfirmyn='N') p
	 ]]>
	</select>

	<select id="adminProjectView" resultType="adminProjectView">
		select p.projectno, p.email, p.projectimage, p.projecttitle, p.categorycode,
        	(select name from member m where p.email = m.email) name,
        	(select trunc(deadlinedate - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
        	(select supportgoal from project_funding f where p.projectno = f.projectno) supportgoal,
            (select CALCULATEDUEDATE from project_funding f where p.projectno = f.projectno) calculatedueddate,
            (select introducemovie from project_story s where p.projectno = s.projectno) movie,
            (select projectstory from project_story s where p.projectno = s.projectno) story
		from (select * from project_outline where projectconfirmyn='N' and projectdeadlineyn='N' order by projectdate desc) p
        where p.projectno = ${projectNo}
	</select>
	
	<select id="projectGiftList" resultType="ProjectGift">
		select p.projectno, p.minmoney, p.itemnumber, i.itemname, p.itemno, p.giftexplain, p.deliveryyn 
		from project_gift p left join item i on p.projectno = i.projectno and p.itemno = i.itemno
		where p.projectno = ${projectNo} 
		order by minmoney
	</select>
	
	<select id="profileUser" resultType="profile2">
		select * from profile where email = #{userEmail}
	</select>
	
	<update id="projectConfirmY">
		update project_outline set projectconfirmyn='Y' where projectno=#{no}
	</update>
	
	<update id="projectConfirmF">
		update project_outline set projectconfirmyn='F' where projectno=#{no}
	</update>
	<select id="memberList" resultType="adminMember">
		select m.email, nvl(l.projecting,0) projecting, nvl(ss.supporting,0) supporting
		from member m left join (select email, count(*) projecting from project_outline  where projectdeadlineyn='N' and projectconfirmyn='Y' group by email) l on m.email= l.email
		            left join (select s.email, count(*) supporting from project_outline o join support s on o.projectno=s.projectno where o.projectdeadlineyn='N' and o.projectconfirmyn='Y' group by s.email) ss on ss.email=m.email
		where m.deleteyn='N'
	</select>
	<update id="adminMemberDelete">
		update member set deleteyn='Y' where email=#{email}
	</update>
	
	<select id="projectDeadlineList" resultType="list_project_view">
	<![CDATA[
		select *
        from (select p.projectno, p.projectimage, p.projecttitle, 
	        (select name from member m where p.email = m.email) name,
	        (select trunc(deadlinedate - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
	        nvl(s.supportmoney,0) supportmoney, nvl(s.supportpercent,0) supportpercent
			from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p join project_summary s on p.projectno = s.projectno where p.projectdeadlineyn='N')
        where deadlineday <=0
	 ]]>
	</select>
	
	<select id="projectDeadlineView" resultType="adminProjectView">
		select p.projectno, p.email, p.projectimage, p.projecttitle, 
        	(select name from member m where p.email = m.email) name,
        	(select trunc(deadlinedate - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
        	(select supportgoal from project_funding f where p.projectno = f.projectno) supportgoal,
            (select CALCULATEDUEDATE from project_funding f where p.projectno = f.projectno) calculatedueddate,
            s.supportmoney, s.supportpercent, s.supportor, p.categorycode
		from (select * from project_outline) p join project_summary s on p.projectno = s.projectno
        where p.projectno = ${projectNo}
	</select>
	<select id="memberSearchList" resultType="adminMember">
	<![CDATA[
	select *
	from(select m.email, nvl(l.projecting,0) projecting, nvl(ss.supporting,0) supporting
		 from member m left join (select email, count(*) projecting from project_outline  where projectdeadlineyn='N' and projectconfirmyn='Y' group by email) l on m.email= l.email
		 left join (select s.email, count(*) supporting from project_outline o join support s on o.projectno=s.projectno where o.projectdeadlineyn='N' and o.projectconfirmyn='Y' group by s.email) ss on ss.email=m.email
		 where m.deleteyn='N') p
    where p.email like '%' ||  #{email} || '%'

    ]]>
	</select>
	<select id="adminMessage" resultType="adminMessage">
		select * from message where receiveemail=(select email from member where adminyn='Y') order by messagedate desc
	</select>
	
	<select id="selectMessage" resultType="adminMessage" parameterType="String">
		select messageno, messagecontent, readyn, sendemail, receiveemail, TO_CHAR(TO_DATE(messagedate), 'yyyy/mm/dd') as messagedate from message where messageno= #{messageNo} 
	</select>
	
	<update id="updateReadyn">
		update message set readyn='Y' where messageno = #{messageNo}
	</update>
	
	<select id="selectReadN" resultType="adminMessage">
		select * from message where receiveemail=(select email from member where adminyn='Y') and readyn='N' order by messagedate desc
	</select>
	
	<insert id="replyMessage">
		insert into message values(seq_message_no.nextval, '${content}',default,'${replySendEmail}','${replyReceiveEmail}',default)
	</insert>
	
	<select id="adminMessageSearch"  resultType="adminMessage">
	<![CDATA[
		select * from message where receiveemail=(select email from member where adminyn='Y') and  messagecontent like '%' ||  #{content} || '%'
	]]>	
	</select>
	
</mapper>
