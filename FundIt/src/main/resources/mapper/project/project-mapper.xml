<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="project">
	
	<select id="selectIndexProject" resultType="project_outline">
	select * from project_outline where projectconfirmyn='Y' and projectindexyn='Y' and projectdeadlineyn='N'
	</select>
	
	<select id="selectIndexPopularProject" resultType="list_project_view">
	<![CDATA[
		select *
		from (
		    select  o.projectno, o.projecttitle, o.projectimage,
		        (select name from member m where o.email = m.email) name,
		        trunc(f.deadlinedate - sysdate)+1 deadlineday,
		        sp.supportmoney, sp.supportpercent
		    from project_outline o 
		        join project_funding f on o.projectno = f.projectno 
		        join project_story s on o.projectno = s.projectno
		        join project_account a on o.projectno = a.projectno
		        join project_summary sp on o.projectno = sp.projectno
		    where o.projectconfirmyn='Y' and o.projectdeadlineyn='N'
		    order by sp.supportmoney desc, sp.supportpercent desc
		)
		where rownum <= 12
	 ]]>
	</select>
	
	<select id="selectIndexNewProject" resultType="list_project_view">
	<![CDATA[
		select *
		from (
		    select  o.projectno, o.projecttitle, o.projectimage,
		        (select name from member m where o.email = m.email) name,
		        trunc(f.deadlinedate - sysdate)+1 deadlineday,
		        sp.supportmoney, sp.supportpercent
		    from project_outline o 
		        join project_funding f on o.projectno = f.projectno 
		        join project_story s on o.projectno = s.projectno
		        join project_account a on o.projectno = a.projectno
		        join project_summary sp on o.projectno = sp.projectno
		    where o.projectconfirmyn='Y' and o.projectdeadlineyn='N'
		    order by o.projectdate desc
		)
		where rownum <= 12
	 ]]>
	</select>
	
	<select id="selectIndexDeadlineProject" resultType="list_project_view">
	<![CDATA[
		select *
		from (
		    select  o.projectno, o.projecttitle, o.projectimage,
		        (select name from member m where o.email = m.email) name,
		        trunc(f.deadlinedate - sysdate)+1 deadlineday,
		        sp.supportmoney, sp.supportpercent
		    from project_outline o 
		        join project_funding f on o.projectno = f.projectno 
		        join project_story s on o.projectno = s.projectno
		        join project_account a on o.projectno = a.projectno
		        join project_summary sp on o.projectno = sp.projectno
		    where o.projectconfirmyn='Y' and o.projectdeadlineyn='N'
		    order by f.deadlinedate
		)
		where rownum <= 12
	 ]]>
	</select>
	
	<select id="selectMyProjectYet" resultType = "list_project_view">
	select *
	from
		(select p.projectno, p.projecttitle, p.projectimage,p.projectconfirmyn as "confirmYn",  
			    (select name from member m where p.email = m.email) name,
			    (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
			     s.supportmoney, s.supportpercent
		from (select * from project_outline where projectconfirmyn = 'N' and  email = #{email} order by projectdate desc) p join project_summary s on p.projectno = s.projectno
		order by deadlineday)
	</select>
	
	<select id="selectMyProjectYes" resultType = "list_project_view">
	select *
	from
		(select p.projectno, p.projecttitle, p.projectimage,p.projectconfirmyn as "confirmYn",  
			    (select name from member m where p.email = m.email) name,
			    (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
			     s.supportmoney, s.supportpercent
		from (select * from project_outline where projectconfirmyn = 'Y' and  email = #{email} order by projectdate desc) p join project_summary s on p.projectno = s.projectno
		order by deadlineday)
	</select>
	
	<select id="selectMyProjectNo" resultType = "list_project_view">
	select *
	from
		(select p.projectno, p.projecttitle, p.projectimage,p.projectconfirmyn as "confirmYn",  
			    (select name from member m where p.email = m.email) name,
			    (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
			     s.supportmoney, s.supportpercent
		from (select * from project_outline where projectconfirmyn = 'F' and  email = #{email} order by projectdate desc) p join project_summary s on p.projectno = s.projectno
		order by deadlineday)
	</select>
	
	<select id="selectMyProjectCnt" resultType = "_int">
	select count(*)
		from project_outline o 
		join project_funding f on o.projectno = f.projectno 
		join project_story s on o.projectno = s.projectno
		join project_account a on o.projectno = a.projectno
	where o.email=#{email}</select>
	
	<select id="projectList" resultType="projectList">
		select p.projectno, p.projectimage, p.projecttitle, 
	        (select name from member m where p.email = m.email) name,
            trunc(deadlinedate - sysdate)+1 deadlineDay,
	        s.supportmoney, s.supportpercent,s.supportor, o.projectdate
		from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p 
	        join project_summary s on p.projectno = s.projectno
	        join project_funding f on p.projectno = f.projectno
	        join project_outline o on p.projectno = o.projectno
		where 1=1 
		<if test="deadline == null or deadline=='on'">
			and trunc(deadlinedate - sysdate)+1>=1
		</if>
		<if test="categoryCode != null and categoryCode !='' ">
			and o.categorycode = #{categoryCode}
		</if>
		<if test="select != null and select !=0 and select==1">
			order by supportor desc
		</if>
		<if test="select != null and select !=0 and select==2">
			order by supportmoney desc
		</if>
		<if test="select != null and select !=0 and select==3">
			order by deadlineday
		</if>
		<if test="select != null and select !=0 and select==4">
			order by projectdate desc
		</if>
	</select>
	
	<select id="projectView" resultType="projectView">
		select p.projectno, p.email, p.projectimage, p.projecttitle, 
        	(select name from member m where p.email = m.email) name,
        	(select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
        	(select supportgoal from project_funding f where p.projectno = f.projectno) supportgoal,
            (select CALCULATEDUEDATE from project_funding f where p.projectno = f.projectno) calculatedueddate,
            s.supportmoney, s.supportpercent, s.supportor, p.categorycode, 
            (select refund from project_funding f where p.projectno = f.projectno) refund,s.supportwithouttax
		from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p join project_summary s on p.projectno = s.projectno
        where p.projectno = ${projectNo}
	</select>
	
	<select id="profileUser" resultType="profile2">
		select * from profile where email = #{userEmail}
	</select>
	
	<select id="oriProjectList" resultType="projectView">
		select rownum,p.projectno, p.email, p.projectimage, p.projecttitle, 
        	(select name from member m where p.email = m.email) name,
        	(select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
        	(select supportgoal from project_funding f where p.projectno = f.projectno) supportgoal,
            (select CALCULATEDUEDATE from project_funding f where p.projectno = f.projectno) calculatedueddate,
            s.supportmoney, s.supportpercent, s.supportor, p.categorycode
		from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p join project_summary s on p.projectno = s.projectno
        where p.email = #{email }
	</select>
	
	<select id="interestList" resultType="list_project_view">
		select p.projectno, p.projectimage, p.projecttitle,
	        (select name from member m where p.email = m.email) name,
	        (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
	        s.supportmoney, s.supportpercent
		from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p join project_summary s on p.projectno = s.projectno join interest i on i.projectno = p.projectno
		 where 1=1 and i.projectno = p.projectno and i.email = #{email} and (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno)  <![CDATA[>]]> 1 order by S.SUPPORTOR desc
	</select>
	
	<insert id="interestInsert">
		insert into interest values(${no},'${email}')
	</insert> 
	
	<select id="interestCnt" resultType="_int">
		select count(*) from interest where projectNo=${no} and EMAIL='${email}'
	</select>
	
	<delete id="interestDelete">
		delete interest where projectno=${projectNo} and email='${email}'
	</delete>
	
	<select id="projectGiftList" resultType="ProjectGift">
		select p.projectno, p.minmoney, p.itemnumber, i.itemname, p.itemno, p.giftexplain, p.deliveryyn 
		from project_gift p left join item i on p.projectno = i.projectno and p.itemno = i.itemno
		where p.projectno = ${projectNo} 
		order by minmoney
	</select>
	
	<select id="projectSeelctGift" resultType="ProjectGift">
		select p.projectno, p.minmoney, p.itemnumber, i.itemname, p.itemno, p.giftexplain, p.deliveryyn 
		from project_gift p join item i on p.projectno = i.projectno and p.itemno = i.itemno
		where p.projectno = ${projectNo}
		order by itemno
	</select>
	
	<insert id="supportInsert">
		insert into support values(seq_support_no.nextval,'${buyer_id}','${projectNo}','${minMoney}','${addMoney}',default)
	</insert>
	
	<select id="supportList" resultType="projectSupport">
		select * from support where projectno = ${projectNo} and payyn is null and email='${buyer_id}'
	</select>
	
	<insert id="deliveryInsert">
		insert into delivery values(${supportNo},'${buyer_id}','${projectNo}','${address}','${calculateduedDate}','${postcode}','${itemName}','${itemNum}','${delivery}')
	</insert>
	
	<insert id="insertPayment">
		insert into payment values('${imp_uid}','${amount}','${buyer_id}','${apply_num}','${supportNo}','${merchant_uid}')
	</insert>
	
	<select id="projectGiftLevel" resultType="string">
		select  distinct p.minmoney
		from project_gift p left join item i on p.projectno = i.projectno and p.itemno = i.itemno
		where p.projectno = ${projectNo} 
		order by minmoney
	</select>
	
	<select id="projectGiftName" resultType="map">
		select p.projectno, p.minmoney, p.itemnumber, i.itemname, p.itemno, p.giftexplain, p.deliveryyn 
		from project_gift p left join item i on p.projectno = i.projectno and p.itemno = i.itemno
		where p.projectno = ${projectNo}  
		order by minmoney
	</select>
	
	<select id="rownum" resultType="_int">
		select count(*) from 
		(select p.projectno, p.projectimage, p.projecttitle,
	        (select name from member m where p.email = m.email) name,
	        (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
	        s.supportmoney, s.supportpercent
		from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p join project_summary s on p.projectno = s.projectno join interest i on i.projectno = p.projectno
		 where 1=1 and i.projectno = p.projectno and i.email = #{email} and rownum <![CDATA[>=]]> 1 and rownum <![CDATA[<=]]> 8)
	</select>
	
	<select id="communityList" resultType="community">
		select * from community c join profile p on c.email=p.email where projectno =${projectNo}
	</select>
	
	<insert id="communityInsert">
		insert into community values(seq_community_no.nextval,${projectNo},'${contextId}','${communityContext}',sysdate)
	</insert>
	
	<select id="interestList2" resultType="list_project_view">
		select p.projectno, p.projectimage, p.projecttitle,
	        (select name from member m where p.email = m.email) name,
	        (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
	        s.supportmoney, s.supportpercent
		from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p join project_summary s on p.projectno = s.projectno join interest i on i.projectno = p.projectno
		where 1=1 and i.projectno = p.projectno and i.email = #{email} and (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno)  <![CDATA[>]]> 0 order by S.SUPPORTMONEY desc
	</select>
		
	<select id="interestList1" resultType="list_project_view">
		select p.projectno, p.projectimage, p.projecttitle,
	        (select name from member m where p.email = m.email) name,
	        (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
	        s.supportmoney, s.supportpercent
		from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p join project_summary s on p.projectno = s.projectno join interest i on i.projectno = p.projectno
		where 1=1 and i.projectno = p.projectno and i.email = #{email} and (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno)  <![CDATA[>]]> 0 order by S.SUPPORTOR desc
	</select>
		
	<select id="interestList3" resultType="list_project_view">
		select p.projectno, p.projectimage, p.projecttitle,
	        (select name from member m where p.email = m.email) name,
	        (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
	        s.supportmoney, s.supportpercent
		from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p join project_summary s on p.projectno = s.projectno join interest i on i.projectno = p.projectno
		where 1=1 and i.projectno = p.projectno and i.email = #{email} and (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno)  <![CDATA[>]]> 0 order by deadlineday
	</select>
		
	<select id="interestList4" resultType="list_project_view">
		select p.projectno, p.projectimage, p.projecttitle,
	        (select name from member m where p.email = m.email) name,
	        (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno) deadlineday,
	        s.supportmoney, s.supportpercent
		from (select * from project_outline where projectconfirmyn='Y' and projectdeadlineyn='N' order by projectdate desc) p join project_summary s on p.projectno = s.projectno join interest i on i.projectno = p.projectno
		where 1=1 and i.projectno = p.projectno and i.email = #{email} and (select trunc(deadlinedate+1 - sysdate) from project_funding f where p.projectno = f.projectno)  <![CDATA[>]]> 0 order by p.projectdate desc
	</select>
	
	<select id="makeProject" resultType="profile">
	select p.*, l.localname, (select m.name from member m where m.email = p.email) name from profile p left join location l on p.localcode = l.localcode where email = #{email}
	</select>
	
	<insert id="makeProjectOutline">
	insert into project_outline values(seq_project_no.nextval, #{email},#{projectTitle},#{projectImage},#{projectSummary},#{categoryCode},default,default,default,default)
		<selectKey keyProperty="projectNo" resultType="_int" order="AFTER">
		select seq_project_no.currval from dual
		</selectKey>
	</insert>
	
	<update id="makeProjectProfile">
	update profile set 
		<if test="profileImage != null">
		profileimage=#{profileImage}, 
		</if>
	profileintroduce=#{profileIntroduce}, localcode=#{localCode} where email=#{email}
	</update>
	
	<insert id="makeProjectFunding">
	insert into project_funding values(#{projectNo},#{supportGoal},#{deadlineDate},#{calculateDueDate},#{refund})
	</insert>
	
	<insert id="insertItem">
	insert into item values(seq_item_no.nextval,#{itemName},#{projectNo})
		<selectKey keyProperty="itemNo" resultType="_int" order="AFTER">
			select seq_item_no.currval from dual
		</selectKey>
	</insert>
	
	<update id="updateItem">
	update item set itemname=#{itemName} where itemno=#{itemNo}
	</update>
	
	<select id="selectItemList" resultType="item">
	select * from item where projectno=#{projectNo}
	</select>
	
	<delete id="deleteGift">
	delete from project_gift where projectno=#{projectNo}
	</delete>
	
	<insert id="insertGift">
	insert into project_gift values(#{projectNo},#{minMoney},#{itemnumber},#{itemno},#{giftexplain},#{deliveryYN},seq_gift_no.nextval)
	</insert>
	
	<select id="selectGift" resultType="projectGift">
	select g.*, i.itemname from project_gift g join item i on g.itemno = i.itemno where g.projectno=#{projectNo} and g.minmoney=#{minMoney} and i.itemno=#{itemno}
	</select>
	
	<delete id="deleteGiftOne">
	delete from project_gift where projectno=#{projectNo} and minMoney=#{minMoney}
	</delete>
	
	<delete id="deleteCommunity">
	delete from community where projectno = #{projectNo} 
	</delete>
	
	<delete id="deleteInterest">
	delete from interest where projectno = #{projectNo} 
	</delete>
	
	<delete id="deleteAccount">
	delete from project_account where projectno = #{projectNo} 
	</delete>
	
	<delete id="deleteDeadline">
	delete from project_deadline where projectno = #{projectNo} 
	</delete>
	
	<delete id="deleteFunding">
	delete from project_funding where projectno = #{projectNo} 
	</delete>
	
	<delete id="deleteMyGift">
	delete from project_gift where projectno = #{projectNo} 
	</delete>
	
	<delete id="deleteStory">
	delete from project_story where projectno = #{projectNo} 
	</delete>
	
	<delete id="deleteSummary">
	delete from project_summary where projectno = #{projectNo} 
	</delete>
	
	<delete id="deleteSupport">
	delete from support where projectno = #{projectNo} 
	</delete>
	
	<delete id="deleteItem">
	delete from item where projectno = #{projectNo}
	</delete>
		
	<delete id="deleteProject">
	delete from project_outline where projectno = #{projectNo} and email = #{memberLoggedIn} 
	</delete>
	
	<select id="selectMyProjectI" resultType = "list_project_view">
	   select * from  
     (select a.projectno, a.projecttitle, a.projectimage, a.projectconfirmyn as "confirmYn", (select nvl(name,'') from member m where a.email = m.email) "name",
       (select to_char(trunc(deadlinedate+1 - sysdate)) from project_funding f where a.projectno = f.projectno) deadlineday,nvl(b.SUPPORTMONEY,0),nvl(b.SUPPORTPERCENT,0)
        from (select * from  project_outline where email = #{email} and projectconfirmyn = 'I') a
        left join project_summary b on a.projectno = b.projectno order by deadlineday)
	</select>
	
	<update id="communityUpdate">
		update community set communitycontent='${communityContext}' where projectNo=${projectNo} and email='${contextId}' and communityno=${communityNo}
	</update>
	
	<select id="paymentCancel" resultType="supportPayment">
		select * 
		from support s join payment p on s.supportno=p.supportno
		where s.email='${email}' and s.projectno=${projectNo} and payyn is null
	</select>
	<update id="paymentCancelDel">
		update support set payyn='N' where projectNo='${projectNo}' and email='${email}' and payyn is null
	</update>
	
	<insert id="makeProjectStory">
	insert into project_story values(#{projectNo},#{introduceMovie,jdbcType=VARCHAR},#{projectStory})
	</insert>
	
	<insert id="makeProjectAccount">
	insert into project_account values(#{projectNo},#{email},#{phone},#{accountName},#{accountNumber},#{accountType},#{bankCode})
	</insert>
	
	<update id="projectConfirm">
	update project_outline set projectconfirmyn='N' where projectno=#{projectNo}
	</update>
	
	<select id="selectProjectOutline" resultType="project_outline">
	select o.*, c.categoryname from project_outline o join category c on o.categorycode = c.categorycode where projectno=#{projectNo}
	</select>
	
	<update id="updateProjectOutline">
	update project_outline set projecttitle=#{projectTitle}, 
		<if test="projectImage != null">
			projectimage=#{projectImage}, 
		</if>
	projectsummary=#{projectSummary}, categorycode=#{categoryCode} where projectno=#{projectNo}
	</update>
	
	<select id="selectProjectFunding" resultType="projectFunding">
	select * from project_funding where projectno=#{projectNo}
	</select>
	
	<select id="projectStoryList" resultType="projectStory">
		select * from project_story where projectno = ${projectNo}
	</select>
	
	<insert id="emailAuthentication">
		insert into confirm values('${email}','${emailId}','${joinCode}',default)
	</insert>
	
	<select id="emailAuthenticationList" resultType="string">
		select * from confirm where confirmyn='Y' and confirmemail='${email}'
	</select>
	<select id="emailAuthenticationListN" resultType="string">
		select * from confirm where confirmyn='N' and confirmemail='${email}'
	</select>
	<select id="emailNumList" resultType="string">
		select * from confirm where confirmemail='${email}' and confirmyn='N' and confirmkey='${num}'
	</select>
	
	<update id="makeProjectMember">
	update member set name=#{name} where email=#{email}
	</update>
	
	<select id="projectPreview" resultType="projectView">
	select o.projectno, o.email, o.projectimage, o.projecttitle, o.categorycode, (select categoryname from category c where o.categorycode = c.categorycode) categoryname,
		(select name from member m where o.email = m.email) name, f.deadlinedate,
		trunc(f.deadlinedate+1 - sysdate) deadlineday, f.supportgoal, f.refund, f.calculateduedate as calculatedueddate, s.introducemovie, s.projectstory
	from project_outline o join project_funding f on o.projectno = f.projectno join project_story s on o.projectno = s.projectno
	where o.projectconfirmyn='I' and o.projectdeadlineyn='N' and o.projectno=#{projectNo}
	</select>
	
	<select id="projectGiftMoneyList" resultType="_int">
	select distinct minmoney from project_gift where projectno=#{projectNo} order by minmoney
	</select>
	
	<update id="updateConfirmYN">
	update confirm set confirmyn='Y' where confirmemail=#{email} and confirmkey=#{num}
	</update>
	
	<update id="updateProjectFunding">
	update project_funding set supportgoal=#{supportGoal}, 
		<if test="deadlineDate != null">
			deadlinedate=#{deadlineDate}, 
		</if>
		<if test="calculateDueDate != null">
			calculateduedate=#{calculateDueDate},  
		</if>
		refund=#{refund} where projectno=#{projectNo}
	</update>
	
	<select id="selectProjectStory" resultType="projectStory">
	select * from project_story where projectno=#{projectNo}
	</select>
	
	<update id="updateProjectStory">
	update project_story set projectstory=#{projectStory}
		<if test="introduceMovie != null">
		, introducemovie=#{introduceMovie}
		</if>
	where projectno=#{projectNo}
	</update>
	
	<select id="selectProjectAccount" resultType="projectAccount">
	select a.*, (select bankname from bank b where a.bankcode=b.bankcode) bankname 
	from project_account a where projectno=#{projectNo}
	</select>
	
	<update id="updateProjectAccount">
	update project_account set email=#{email}, phone=#{phone}, accountname=#{accountName}, 
	accountnumber=#{accountNumber}, accounttype=#{accountType}, bankcode=#{bankCode}
	where projectno=#{projectNo}
	</update>
	
	<update id="projectSummary">
		update project_summary set supportor=${supportor}, supportmoney=${supportMoney}, supportpercent=${supportpercent}, supportwithouttax=${supportwithouttax} where projectno=${projectNo}
	</update>
	
	<select id="oriProjectProjectCount" resultType="_int">
		select count(*) from support where payyn='Y' and email='${email}'
	</select>
	
</mapper>
